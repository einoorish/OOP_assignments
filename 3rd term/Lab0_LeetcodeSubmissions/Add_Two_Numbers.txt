/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode* head = new ListNode(0);
         head->next = new ListNode();
        
    ListNode* result = head->next;
        
        int shift = 0, sum = 0;
        
        sum = l1->val + l2->val;
        shift = sum/10;
        *result = ListNode(sum%10);
        l1 = l1->next;
        l2 = l2->next;
        
        while(l1!=nullptr || l2!=nullptr){
            sum = 0;
            
            if(l1!=nullptr) sum += l1->val;
            if(l2!=nullptr) sum += l2->val;
            
            result->next = new ListNode((sum + shift)%10);            
            
            if(sum + shift > 9) shift = 1; else shift = 0;
            
            if (l1!=nullptr) l1=l1->next;
            if (l2!=nullptr) l2=l2->next;
            result = result->next;
        }
    
        //in case shift value is still not zero
        if(shift!=0)
            result->next =  new ListNode(1);
        
        return head->next;
    }
};
